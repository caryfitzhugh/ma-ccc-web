{
  "_args": [
    [
      {
        "raw": "react-cookie@^2.1.4",
        "scope": null,
        "escapedName": "react-cookie",
        "name": "react-cookie",
        "rawSpec": "^2.1.4",
        "spec": ">=2.1.4 <3.0.0",
        "type": "range"
      },
      "/home/cfitzhugh/working/ma-ccc-web"
    ]
  ],
  "_from": "react-cookie@>=2.1.4 <3.0.0",
  "_id": "react-cookie@2.1.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/react-cookie",
  "_nodeVersion": "8.9.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-cookie_2.1.4_1519579656713_0.7686140888130417"
  },
  "_npmUser": {
    "name": "exon",
    "email": "trembl.ben@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-cookie@^2.1.4",
    "scope": null,
    "escapedName": "react-cookie",
    "name": "react-cookie",
    "rawSpec": "^2.1.4",
    "spec": ">=2.1.4 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-cookie/-/react-cookie-2.1.4.tgz",
  "_shasum": "7ccb5d2a8e837098c119a0edba8e4a09ac3ffcad",
  "_shrinkwrap": null,
  "_spec": "react-cookie@^2.1.4",
  "_where": "/home/cfitzhugh/working/ma-ccc-web",
  "author": {
    "name": "Benoit Tremblay",
    "email": "benoit@reactivestack.com"
  },
  "bugs": {
    "url": "https://github.com/reactivestack/cookies/issues"
  },
  "dependencies": {
    "hoist-non-react-statics": "^2.3.1",
    "prop-types": "^15.0.0",
    "universal-cookie": "^2.1.2"
  },
  "description": "Universal cookies for React",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "react": "^15.0.0",
    "react-dom": "^15.0.0",
    "rimraf": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Dg6yt7f3vmc82WiFvPZQdzixs76NTQ1OFNoNh941yE1cgsdAKIIKSUTof1LummjuxaCfzQ3VVQyX5g5rjo21wQ==",
    "shasum": "7ccb5d2a8e837098c119a0edba8e4a09ac3ffcad",
    "tarball": "https://registry.npmjs.org/react-cookie/-/react-cookie-2.1.4.tgz",
    "fileCount": 6,
    "unpackedSize": 12988
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/reactivestack/cookies/tree/master/packages/react-cookie/#readme",
  "keywords": [
    "universal",
    "isomophic",
    "cookie",
    "react"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "exon",
      "email": "trembl.ben@gmail.com"
    }
  ],
  "name": "react-cookie",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">= 15"
  },
  "readme": "<h3 align=\"center\">\n  <a href=\"packages/react-cookie\">react-cookie</a>\n</h3>\n\n<p align=\"center\">\n  Universal cookies for <a href=\"https://facebook.github.io/react\">React</a><br />\n  <a href=\"https://badge.fury.io/js/react-cookie\"><img src=\"https://badge.fury.io/js/react-cookie.svg\" /></a>\n</p>\n\n[![Build Status](https://travis-ci.org/reactivestack/cookies.svg?branch=master)](https://travis-ci.org/reactivestack/cookies)\n<br />\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/coookies.svg)](https://saucelabs.com/u/coookies)\n\n## Integrations\n - [`universal-cookie`](https://www.npmjs.com/package/universal-cookie) - Universal cookies for JavaScript\n - [`universal-cookie-express`](https://www.npmjs.com/package/universal-cookie-express) - Hook cookies get/set on Express for server-rendering\n\n## Getting started\n\n`npm install react-cookie`\n\n## `<CookiesProvider />`\nSet the user cookies\n\nOn the server, the `cookies` props must be set using `req.universalCookies` or `new Cookie(cookieHeader)`\n\n## `withCookies(Component)`\nGive access to cookies by providing it using the `cookies` prop.\n\n## Cookies\n\n### `get(name, [options])`\nGet a cookie value\n - name (string): cookie name\n - options (object):\n   - doNotParse (boolean): do not convert the cookie into an object no matter what\n\n### `getAll([options])`\nGet all cookies\n - options (object):\n   - doNotParse (boolean): do not convert the cookie into an object no matter what\n\n### `set(name, value, [options])`\nSet a cookie value\n- name (string): cookie name\n- value (string|object): save the value and stringify the object if needed\n- options (object): Support all the cookie options from RFC 6265\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\n  - expires (Date): absolute expiration date for the cookie\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\n  - secure (boolean): Is only accessible through HTTPS?\n  - httpOnly (boolean): Is only the server can access the cookie?\n\n### `remove(name, [options])`\nRemove a cookie\n- name (string): cookie name\n- options (object): Support all the cookie options from RFC 6265\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\n  - expires (Date): absolute expiration date for the cookie\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\n  - secure (boolean): Is only accessible through HTTPS?\n  - httpOnly (boolean): Is only the server can access the cookie?\n\n## Simple Example\n```js\n// Root.jsx\nimport React from 'react';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n\nexport default function Root() {\n  return (\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  );\n}\n```\n\n```js\n// App.jsx\nimport React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport NameForm from './NameForm';\n\nclass App extends Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n  componentWillMount() {\n    const { cookies } = this.props;\n\n    this.state = {\n      name: cookies.get('name') || 'Ben'\n    };\n  }\n\n  handleNameChange(name) {\n    const { cookies } = this.props;\n\n    cookies.set('name', name, { path: '/' });\n    this.setState({ name });\n  }\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <div>\n        <NameForm name={name} onChange={this.handleNameChange.bind(this)} />\n        {this.state.name && <h1>Hello {this.state.name}!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default withCookies(App);\n```\n\n## Server-Rendering Example\n```js\n// src/components/App.js\nimport React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport NameForm from './NameForm';\n\nclass App extends Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n  componentWillMount() {\n    const { cookies } = this.props;\n\n    this.state = {\n      name: cookies.get('name') || 'Ben'\n    };\n  }\n\n  handleNameChange(name) {\n    const { cookies } = this.props;\n\n    cookies.set('name', name, { path: '/' });\n    this.setState({ name });\n  }\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <div>\n        <NameForm name={name} onChange={this.handleNameChange.bind(this)} />\n        {this.state.name && <h1>Hello {this.state.name}!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default withCookies(App);\n```\n\n```js\n// src/server.js\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { CookiesProvider } from 'react-cookie';\n\nimport Html from './components/Html';\nimport App from './components/App';\n\nexport default function middleware(req, res) {\n  const markup = ReactDOMServer.renderToString(\n    <CookiesProvider cookies={req.universalCookies}>\n      <App />\n    </CookiesProvider>\n  );\n\n  const html = ReactDOMServer.renderToStaticMarkup(<Html markup={markup} />);\n\n  res.send('<!DOCTYPE html>' + html);\n}\n```\n\n```js\n// src/client.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CookiesProvider } from 'react-cookie';\n\nimport App from './components/App';\n\nconst appEl = document.getElementById('main-app');\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  appEl\n);\n```\n\n```js\n// server.js\nrequire('babel-register');\n\nconst express = require('express');\nconst serverMiddleware = require('./src/server').default;\nconst cookiesMiddleware = require('universal-cookie-express');\n\nconst app = express();\n\napp\n  .use('/assets', express.static('dist'))\n  .use(cookiesMiddleware())\n  .use(serverMiddleware);\n\napp.listen(8080, function() {\n  console.log('Listening on 8080...'); // eslint-disable-line no-console\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reactivestack/cookies.git"
  },
  "scripts": {
    "build": "rimraf lib && babel src -d lib --ignore __tests__"
  },
  "typings": "lib/index.d.ts",
  "version": "2.1.4"
}
